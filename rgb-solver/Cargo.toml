[package]
name = "rgb-solver"
version = "0.1.2"
authors = ["Eric <eric7237cire@gmail.com>"]
edition = "2018"
license = "MIT"
repository = "https://github.com/eric7237cire/rgb_delivery"
description = "WASM made in rust to solve RGB Express puzzles"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
# see https://github.com/rustwasm/wasm_game_of_life/issues/22
serde = "^1.0.90"
serde_derive = "^1.0.90"
serde_json = "*"
wasm-typescript-definition = { path = "../wasm-typescript-definition" }
bitvec = "*"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.1", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.2", optional = true }

# Only for tests/docs/etc
[dev-dependencies]
wasm-bindgen-test = "0.2"
rand = "*"

[dependencies.web-sys]
version = "0.3"
features = [
  "console",
]

[dependencies.wasm-bindgen]
version = "=0.2.34"
features = ["serde-serialize"]

[dependencies.arrayvec]
version = "*"
features = ["std"]

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = 2
