{"version":3,"sources":["webpack:///../rgb-solver/pkg/rgb_solver.js"],"names":["__webpack_require__","r","__webpack_exports__","d","__wbg_alert_2bb45edc9ca9165e","greet","get_colors","__wbg_error_cc95a3d302735ca3","__widl_f_log_1_","__wbindgen_object_drop_ref","__wbindgen_string_new","__wbindgen_json_parse","__wbindgen_json_serialize","Universe","__wbindgen_throw","_rgb_solver_bg__WEBPACK_IMPORTED_MODULE_0__","cachedTextDecoder","TextDecoder","cachegetUint8Memory","getUint8Memory","buffer","Uint8Array","getStringFromWasm","ptr","len","decode","subarray","arg0","arg1","varg0","alert","heap","Array","getObject","idx","fill","undefined","push","heap_next","length","dropObject","takeObject","ret","stack_pointer","addBorrowedObject","obj","Error","slice","console","error","log","i","addHeapObject","p","l","JSON","parse","cachedTextEncoder","TextEncoder","WASM_VECTOR_LEN","cachegetUint32Memory","ptrptr","arg","buf","encode","set","passStringToWasm","stringify","Uint32Array","[object Object]","Object","create","prototype","this","freeUniverse","__wrap"],"mappings":"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","file":"1.worker.js","sourcesContent":["/* tslint:disable */\nimport * as wasm from './rgb_solver_bg';\n\nlet cachedTextDecoder = new TextDecoder('utf-8');\n\nlet cachegetUint8Memory = null;\nfunction getUint8Memory() {\n    if (cachegetUint8Memory === null || cachegetUint8Memory.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory;\n}\n\nfunction getStringFromWasm(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory().subarray(ptr, ptr + len));\n}\n\nexport function __wbg_alert_2bb45edc9ca9165e(arg0, arg1) {\n    let varg0 = getStringFromWasm(arg0, arg1);\n    alert(varg0);\n}\n/**\n* @returns {void}\n*/\nexport function greet() {\n    return wasm.greet();\n}\n\nconst heap = new Array(32);\n\nheap.fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n/**\n* @returns {any}\n*/\nexport function get_colors() {\n    return takeObject(wasm.get_colors());\n}\n\nlet stack_pointer = 32;\n\nfunction addBorrowedObject(obj) {\n    if (stack_pointer == 1) throw new Error('out of js stack');\n    heap[--stack_pointer] = obj;\n    return stack_pointer;\n}\n\nexport function __wbg_error_cc95a3d302735ca3(arg0, arg1) {\n    let varg0 = getStringFromWasm(arg0, arg1);\n\n    varg0 = varg0.slice();\n    wasm.__wbindgen_free(arg0, arg1 * 1);\n\n    console.error(varg0);\n}\n\nexport function __widl_f_log_1_(arg0) {\n    console.log(getObject(arg0));\n}\n\nexport function __wbindgen_object_drop_ref(i) { dropObject(i); }\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nexport function __wbindgen_string_new(p, l) {\n    return addHeapObject(getStringFromWasm(p, l));\n}\n\nexport function __wbindgen_json_parse(ptr, len) {\n    return addHeapObject(JSON.parse(getStringFromWasm(ptr, len)));\n}\n\nlet cachedTextEncoder = new TextEncoder('utf-8');\n\nlet WASM_VECTOR_LEN = 0;\n\nfunction passStringToWasm(arg) {\n\n    const buf = cachedTextEncoder.encode(arg);\n    const ptr = wasm.__wbindgen_malloc(buf.length);\n    getUint8Memory().set(buf, ptr);\n    WASM_VECTOR_LEN = buf.length;\n    return ptr;\n}\n\nlet cachegetUint32Memory = null;\nfunction getUint32Memory() {\n    if (cachegetUint32Memory === null || cachegetUint32Memory.buffer !== wasm.memory.buffer) {\n        cachegetUint32Memory = new Uint32Array(wasm.memory.buffer);\n    }\n    return cachegetUint32Memory;\n}\n\nexport function __wbindgen_json_serialize(idx, ptrptr) {\n    const ptr = passStringToWasm(JSON.stringify(getObject(idx)));\n    getUint32Memory()[ptrptr / 4] = ptr;\n    return WASM_VECTOR_LEN;\n}\n\nfunction freeUniverse(ptr) {\n\n    wasm.__wbg_universe_free(ptr);\n}\n/**\n*/\nexport class Universe {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Universe.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n        freeUniverse(ptr);\n    }\n\n    /**\n    * @param {number} arg0\n    * @param {number} arg1\n    * @returns {Universe}\n    */\n    static new(arg0, arg1) {\n        return Universe.__wrap(wasm.universe_new(arg0, arg1));\n    }\n    /**\n    * @returns {any}\n    */\n    get_data() {\n        return takeObject(wasm.universe_get_data(this.ptr));\n    }\n    /**\n    * @param {any} arg0\n    * @returns {void}\n    */\n    set_overrides(arg0) {\n        try {\n            return wasm.universe_set_overrides(this.ptr, addBorrowedObject(arg0));\n\n        } finally {\n            heap[stack_pointer++] = undefined;\n\n        }\n\n    }\n    /**\n    * @param {any} arg0\n    * @returns {void}\n    */\n    set_max_ticks(arg0) {\n        try {\n            return wasm.universe_set_max_ticks(this.ptr, addBorrowedObject(arg0));\n\n        } finally {\n            heap[stack_pointer++] = undefined;\n\n        }\n\n    }\n    /**\n    * @returns {void}\n    */\n    init_calculate() {\n        return wasm.universe_init_calculate(this.ptr);\n    }\n    /**\n    * @param {number} arg0\n    * @returns {any}\n    */\n    next_batch_calculate(arg0) {\n        return takeObject(wasm.universe_next_batch_calculate(this.ptr, arg0));\n    }\n    /**\n    * @param {any} arg0\n    * @returns {void}\n    */\n    set_square(arg0) {\n        try {\n            return wasm.universe_set_square(this.ptr, addBorrowedObject(arg0));\n\n        } finally {\n            heap[stack_pointer++] = undefined;\n\n        }\n\n    }\n}\n\nexport function __wbindgen_throw(ptr, len) {\n    throw new Error(getStringFromWasm(ptr, len));\n}\n\n"],"sourceRoot":""}